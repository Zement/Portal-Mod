80070fb0

testa:
8006dcd8	38002000


Kan hoppa även om man är i luften! Dock ej någon collision detection alls..
80071210	4e800020

kan hoppa även om man är i luften! collision detection med!
80070ef0	4e800020

nograv:
8042bb44	00000000

korrekt (typ) modell upponer:
8154b8e0	bf800000
8154b8e4	bf800000



!!!!!!BÄTTRE MODELL UPPONER!!!!!!:
funkar bara bra när man är liten :(
8154b908	80000000



80128264?
80128100?

80129e70	körs när man böjer sig och hoppar!

80127350	hopp?

80128264	hopp???

8012771c	lägger till hastighet i y när man hoppat!


801272b0
800592ac

800592a8	60000000

8015fbe0

8015fb70!!!???

testa 8015fbb8	60000000





8042dc0c!!! 	sätt till plus!!
8042da58	sätt till minus!!
8042bbb8	-2! det som sätts 24/7!

801275b0	räkna ut alla arc-grejer i hopp?
		har kanske med sidohastighet i hopp att göra


801468b0	har nog mer med det att göra!


8004c5ec	detta är det ju som ändrar fallhastigheten!!
		...bara när man är högst upp typ...



8004c58c	läser in -.34 från 802f595c och sparar i b918

8004c5e0	läser in -0.06 och sparar i 8154b918 om man är på marken
		läser dock in -0.34 om man är där uppe!!!

8004c5ac	bestämmer nog vilket som ska läsas in.. hamnar i 
		801468b0

8004c5d4

80056bdc	läser från +0x1090


8154c6a8/c	viktig för arc, 01000000 om man håller in ettan!

8004c520	kör denna när upp och ner!

8004c5b0



8004c5c0	ble-, ändra till beq- när upp och ner!!!


8043fcb4	blir 2.0 ibland och läggs till i x-led, varför??


8006cd14	60000000, för att inte lägga till i x-led, testa!!
		springer bara på stället då...

800575f0	lägger till skit i förgasarn???
		testa 60000000 här istället!


när man hoppar på marken, b918 skrivs av (typ):
801468b0
8004c5fc
(8004c6e0)	OM MAN EJ HÅLLER INNE TVÅAN!


när man hoppar från taket, b918 skrivs av (typ):
801468b0
8004c5fc
(8004c6e0)	om man ej håller inne tvåan!




fixa hopp upponer:
80057104	ec010028	så att man faller uppåt!
måste dock fixa så att man hoppar neråt...


fixa hopp neråt:


BR på 800570f8!
BR på 80057150

800570e4

81548c04




8014369c	läser in 8042bb44 - gravity!


80071210:
~70: tar marios position och nästa position och gör något med


80127480: jump-funktion! körs när man trycker på hoppknappen

80057a68: jump?

8005e710: jump?

8005e3b0: juuuump??


800d9970	remove object?


8004e4d0



testa:
8006efa0	60000000
800706c8	60000000

8006dcdc	60000000
8006f0b0	60000000


80054688	60000000
80054698	60000000
80054898	60000000
80054888	60000000

80054920	60000000
80054950	60000000
8005497c	60000000
     98c
    4a10
    4a20


###DESSA!!!###
80070ef0	4e800020

80054688	60000000
#80054698	60000000
#80054898	60000000
#80054888	60000000

80054d64	60000000	lägger inte till 0400...?
#80054398	60000000

also:
#80057150	60000000
8042bb44	00000000
##############



48 - ?-knapp
49 - blå P
4A - utropstecken


8153da00:	?-knapp!
8153e2c0:	?-knapp
8153eb80:	!-knapp
8153f440:	P-knapp
8153fd00:	?-knapp

knapp + 0x558 = 0 när itryckt, 3f800000 annars


hastigheter i vanligt hopp:
3.868		.06
3.808		.34
3.468		.34
3.128		
2.788
...



8153fe60	koopa
81540888	goomba

80a73ee0	flyttar fiender (koopa iaf...), 
		kan använda denna för att ändra grav!
		och rotera dom etc!

80032170	flyttar goomba

80033180
8015fe80

8006cd90	handle x speed, bara koopa?
8006cde0	handle y speed, både koopa och goomba!!


konstig rörelse åt höger när bbb8 är 2.0:
802f6d00
80057600
8008c2c0	clear_activephysics

8006cd00	man kan ej röra sig om den avaktiveras..



### fixa offset ###
8006f394	flyttar ut mario massa? this is it??

8154b96c	hitbox offset!!!!!!! checka write!!

skrivs i:
8014249c	lagrar!!
801424d0	samma


80142494	lagrar i b970
801424d8	samma


801424d4	lagrar i b974


80142170	hela funken

skriver y-pos:
8006cd20
8005713c
8006f7c8	!!!






8016a2b0	DENNA fixar draw-matriser, this is it typ!!!


ändrar matrisen för koopa i y-led:
800384bc
80a73148



800d7110	avaktiveras denna så ritas mario ej!

800ca654	60000000 => ritas ej
800d3b8c	60000000 => inget
800d3b40	60000000 => bara huvudet ritas ut :D
800d3b50	60000000 => samma :O
800d3b6c	60000000 => bara kroppen ritas ut :)
800d3b80	60000000 => hänger sig

80164fac	60000000 => skärmen blir svart utom statusgrejer!


8154c660?

8154ced0, fortfarande en massa matriser??


80329ca0	står bland alla matriser..
80308d80	
80350d48

811ea984


8042e1c8
8042e1e4


8016a2b0	setDrawMatrix

80164d90	något med floating point händer här
802cd4e0	samma...
802c0e90	samma... händer direkt här
801c7130	samma



0x2c4		hela statusradsgrejen!
0x2c3		något annat?



804295f8	sätter storlek på bakgrund!

8087720c	60000000

815417d0







8154b9f0:

8030f6d0
8154b804
8154c8a8
8154c898
8154c8b8
b8b0
b8bc
b8ec
..
8154bae0
..
..
80319188
8154b9f0
..
8154e3ac
..
80308d80
..
816e7ae0
80350d48
80329ca0
80350d48



8154bb93
8154e3ac
816e7ae0
80350d48
80329ca0
80329ca0
804173d4
81769ca0
80350bd0



8154b8e8


### fixa hoppa sönder upponer! ###
värde i +0x1b8


80095a10	60000000, mario kan ej interagera
80095d30	preplayercollision
80095c20	playercollision, kan inte dö men kan döda när denna är inaktiv!


80031790	


800a0ea0	kill goomba när man hoppar! dock ej koopa..

800317f4	hoppar till 80031950, man kan hoppa på goombas utan att dom dör
		dock ej koopas

80095abc	körs när man springer på en goomba, ELLER en koopa
		800389e0 när koopa, 80031790 när goomba!!!

80038c30	kommer hit om man hoppar på koopa, ej annars!!
		baseras på r3 som läses in i 800964a0!!

800964fc	KOMMER BARA HIT OM MAN GÅR IN I NÅN!! :D
		baseras på r3 som läses in i 800a29c0!!!


800a2ae0	samma, baseras på r3 från 800a2870

800a2998	jämför hastigheten med något, THIS IS not... IT!!!
TESTA:
800a2998	ble- 0xc! GER att man dör om man hoppar på, men även
		om man hoppar på med upp-grav...


800a296c	kommer bara hit om man hoppar!
TESTA:
800a2968	blt 0x3c (4180003C) funkar att hoppa, men även att springa in i tyvärr!
		nop funkar att hoppa både uppe och nere samtidigt!


800b07b0	läser in FIENDENS _NÅGOT_ i f1!



--->8008cc2c	lagrar _NÅGOT_ i f1

________
8008cc28
________


8008cb64	lagrar f2 
8008c2e4	lagrar f0
8008cb88	lagrar f0



8008cb64	samma, djupare



##HELA GREJEN!
f1 läses från 8043fd38 ~ 1183.12
f0 läses från 8043fd30 ~ 1184.5
f3 läses från 8154b970 = 4.0
f4 = f1 - f0 ~ -1.378
f1 läses från 0x81541a68+0x24 = 0x81541a8c = 8.0
f2 läses från 0x8043fd3c ~ -586.304016
f5 = f3 + f1 = 12.0
f0 läses från 8043fd34 = -600
fabs f3, f8 => 
f3 = f4 ~ -1.378

f6 = f2 - f0 ~ 13.695984
f1 läses från 0x8154b94c + 0x28 = 0x8154b974 = 7.0
f0 läses från 0x81541a68 + 0x28 = 0x81541a90 = 8.0
frsp f2, f3 => f2 blir samma som f3 och f4
f3 = f1 + f0 = 7 + 8 = 15.0
fcmpo f2, f5 =>  -1.378, 12.0
bge någonstans, annars=>

fabs f0,f8 => f0 = 13.695...

fcmpo f0, f3 => 13.695, 15.0
bge någonstans, annars=>

f0 = 0x8043fd38 ~ 1183.12
spara f0 i 8154b94c + 0x90
f0 = 0x8043fd3c = -586.304016
spara f0 i 8154b94c + 0x94

samma för den fienden...

...

r0 = 0x8154b94c+0x38 = 0
hoppa iväg
fabs f2, f8 => inget händer???
f0 = 0x80433360-0x7080 = 0
f1 = 0x80433360-0x7078 = 0.5
fcmpo f4, f0 => -1.378, 0
frsp f0, f2 => f0 = f2
f0 = f5 - f0 = 10.622
f4 = f0*f1 = 5.311
bge någonstans, annars=>
f4 = -f1 = -5.311
fabs f2, f8 => f2 = 13.695...
f0 = 0x80433360-0x7080 = 0
f1 = 0x80433360-0x7078 = 0.5
fcmpo f6, f0 => 13.695, 0
f0 = f2 = 13.695
f0 = f3-f0 = 1.305...
f2 = f0*f1 = 0.6525...
bge ett hopp=>
r0 = 0x2c+0x81541a68 = 3
fneg f1,f1 => f1 = 5.311
fneg f0,f1 => f0 = -.6525

nu är f1 = 5.311
f0 = -.6525

DETTA f0 LAGRAS I KONSTIGA TALET!!



totalt:
f0 = -0.5*(15-(ypos+600))
_________________________

där ypos = -586.304016 = mario.ypos-7.0??


testa:
---
8008cb74	lfs f11, -0x7004(rtoc)	C1628FFC 
8008cb88	stfs f11, 0x70(r4)	D1640070

lagrar -0.5 i konstiga talet

Med dessa går det att springa in i alla fiender,
MEN så länge de är på plan mark!! genombrott??

att läsa in -4.0 istället ger samma sak
att läsa in -.04 istället ger samma sak
---



80095d30	preplayercoll, körs när man hoppar eller går in i
80095C20	playercoll, körs när man faktiskt kollajdar
800b07ec	min egen sån hoppgrej, fnegar f1 etc
8008cc24
80097170	mark dead!
80031790	kommer hit om man både hoppar och dör!
		kör playercoll och därmed DÖD härifrån!

800317c0	bestämmer om man ska dö!!! kör 800964a0!

800964e8	samma, djupare, kör 800a29c0
800a2ad4	samma, djppare, kör 800a2870
800a2994	this is it?? igen??

HELA HÄR MED:
tar konstiga talet f1:
f0 = 2;

f1 = f1*2;
f0 = 3;
fcmp f1, 3

om större än 3: DÖ
annars, DÖDA!

SÅ FELET LIGGER ÄNDÅ I DÄR 0x70 UTRÄKNAS!!!
ALLTSÅ I 8008ca50!!!!!


f0 = -.5*(15-(451.5499-439.8999)) ~ -1.675!!
LADDA F5!!!


f0 = -.5*(15-(marioypos+7 - goombaypos))



ALLA konstiga tal i 8043fd38 läggs till i 8008cbd4 och framåt!!!
Vissa räknas ut i 8008c570 som körs från 8008cbd0!!!

men främst 8008cbf0?

8008cba0

802f0ac0	bestämmer vilket tal det högst får vara!!!
		3 i orig, ändra till 4 kanske???





80095a3c	60000000 => man kan butthoppa, men ej interagera annars

80095a74	60000000 => 


800971f0	kill??


prova med goomba:

8152ad60
8152af18	specialstället

8043fd34: -591.884766
8154b8b4: -585.624084
hmmm 6.260682 i skillnad...


jämförelserna (bge snarare..) vid 8008ca8c och 8008ca9c kan fucka upp!!
verkar dock ej så..

TODO: kolla vad som händer i 8008cc24 när man springer in i någon!!




800a2918	läser från 8042c608

800a295c	60000000 => gör att man kan springa in i fiender, noo!

81541920	bobomb i savefile f2
81541ad8	konstigt tal i bobomb



80128254	lagrar fnegad speed i marios! läser den från 8043fc64!
80146d14	lagrar hastigheten i 8043fc64!

80127344	lagrar adressen till fnegad speed?
		läses in från 8154b804+0x14a0 = 8154cca4!

8004740c
8004743c



#goomba vid 81541808
kollar 815419c0 = 1808+ 0x1b8

800a295c	läser in 815419c0





!!!

800e453c	aktiverar event om r0 = 0x10,
		avaktiverar event om r0 = 0!!!!

!!!

#fix offset for large mario

changes 8154b8b4 on the ground and ceiling:
8006f398
80057600
802dd0a0
802f6d00


8006f390	movar mario!

8006f7c4	movar?


801b512c




#crouching
801467e0	60000000

80269f24	
80269df8

8154bc90	3 när man glider, 0 annars?



80056d50	4e800020 => slutar aldrig att glida animationsmässigt

8004b380	4e800020 => fakkar ur

80048630	4e800020 => glider animationsmässigt, men står still

8012ad10



80146794	storar 4.0 om man duckar
801467c0	storar 8.0 om man ej duckar

801423c4	storar 3.5 eller 7.0 i 8154ccec

80142fd0	storar crouch-status i 8154ccf4

802d8b30	storar nåt om crouch i 8154c098
802d7e80	samma typ




80059260
800481c0	glider????
8012acc0	glider???
80048630	glider??
80046768	innan glider?
8004b460	fixar fart när man glider!!



hanterar y pos när man glider:
8006ecbc





#killing out of zone?
8005fe30	dödar allmänt??

8013d920	dödar?

8013df80	dödar genom fall
		utan denna händer inget!
		marios adress i r3 och r4


8042c888	hmmmmmmmmmmmmmmmmmmmmmmmmmmm


8013dc40	dödar allmänt?


8014a7a0


80057184	kör flyttning, dock ej in till zon

80057114	läser in läge i y


8015fe5c

802dcf10	kör 8013df80 om man dör


#standing on blocks upside down fix
80004600
800951ec	goes to 80097f40
80095458	goes somewhere


81541cbc	size of block
815301fc

80022dc0
80022e50	stores size	


80022E60	4e800020!!!!!!!! Funkar för brick blocks, dock ej [!]
		förstör dock om man är stor........

80023bd0	4e800020




#jump on enemies upside down etc

81530cf8	bobombs hoppgrejs
815419c0	goombas hoppgrejs


8008cc28	60000000 => man dör dirr

8008ca90	





80095a10	60000000 gör en genomskinlig

80095a34	60000000




#fixa ökandet av poäng etc


80159e3c	

800cea40	4e800020
80060690	samma
80159df0	samma



81547508
81547908	lagrar ackumulerade poängen
8035529c	samma
80429fa0	samma

8154c884	säger hur många gånger man hoppat på fiende!!!!
		nollställ när man landar etc!!!
		+0x1080




#8154b8d8??
801467e0	store

#8154c834??
80146770	store


#8154ccec???
801423c4	store


#8154b96c??
8014249c	lagrar!!
801424d0	samma

#8154b970
80142494	lagrar i b970
801424d8	samma

#8154b974
801424d4	lagrar i b974


800543e0	flyttar mario etc?


800575fc	flyttar mario def.

8043fcb8	offseten lagras här! först 4, sen 2.34*3 = 11.02!!!

800575f8	offseten lagras i 8043fcb8 här
förmodligen inte detta ställe som ska kollas, detta 
är ju antigravitationsgrejen som alltid ska köras, ska nog snarare kolla
gravitationsgrej så att mario faktiskt flyger upp mer osvosvosv...


8006f750	det måste vara denna va?

f1 = mario.y + 26
f2 = 0.1
f0 = 0
f3 = -432	??? kanske toppen osv????!?
funkar, men går ej att hoppa med mario sen.. för att han sitter fast osv

så r3+0x274 måste vara 04000000!!
lagras i 8006dcdc!!




kommer man till 80056cf0 på marken efter hopp etc???
(egentligen 8005514c!!!)



80055134	kolla om 1 osv!!

8005515c

80143ebc


80055130	kör 80056cf0


80054f80...



###alla värden som ändras i mario när han är stor!###
8154b8d8
8154b96c
8154b970
8154b974
8154c6a0
8154c834
8154c894
8154c898
8154c8a4
8154c8c0
8154cce4	storlek...
8154ccec
8154ccf4
8154cd40



#resetta gravityn
802b5760	körs när man dör ELLER klarar banan!!!
		...eller om man bara tar upp avbryt-menyn... ajja...
816117bc	storlek på koopa som visar dödhet i slutet




VUXENVÄRDEN I 802f531c!!!
802f5aa0???????


80142dd4	storear i 8154c898


!!!!!!HEELT NY!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



#fix mario offset
i 8006f7b4:
b (0x80001cb0-0x8006f7b4)


i 80001cb0:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5

lis r5, 0x802f
ori r5, r5, 0x6900
lwz r4, 0x0(r5)

cmpwi r4, 0
beq .exit

#else, see if mario is at top!!
lbz r4, 0x88(r3)	#should be 4!
cmpwi r4, 0
beq .exit

#else, add to f1 and store 0 to 0x88(r3)!
lis r5, 0x8042
ori r5, r5, 0xbb44
lfs f3, 0x0(r5)
fadds f1, f1, f3
fadds f1, f1, f3
fadds f1, f1, f3
li r4, 0
stb r4, 0x88(r3)


.exit:
fcmpo cr0, f1, f0
lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x80001cb0-0x8006f7b4)-17*4+4





#resets gravity at death
#WRONG!!! especially for multiplayer.. move to drawworldmap again..
#OR 802b5760 (innan 8013dc40)
#drawworldmap at 80926770

i 80926770:
b (0x80001b20-0x80926770)


i 80001b20:
stwu sp, -0x20(sp)	#orig
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
li r4, 0
lis r5, 0x802f
ori r5, r5, 0x6900
stw r4, 0x0(r5)

lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x80001b20-0x80926770)-10*4+4





#fixes so you can jump on enemies upside down

i 800b07ec:
b (0x80001800-0x800b07ec)


i 80001800:
lfs f1, 0x70(r3)	#orig
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5

lis r5, 0x802f
ori r5, r5, 0x6900
lwz r4, 0x0(r5)
cmpwi r4, 0x0
beq .exit

#otherwise, upside down!

fcmpo cr0, f1, f0	#f0 = 0
ble- .exit

#else, fneg f1
fneg f1, f1

.exit
lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x80001800-0x800b07ec)-14*4+4




#stores bounce speed to mario, fneg this if upside down!
i 80128254:
b (0x80001990-0x80128254)


i 80001990:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
lis r5, 0x802f
ori r5, r5, 0x6900
lwz r4, 0x0(r5)
cmpwi r4, 0x0
beq .exit

#else, upside down!
fneg f1, f1

.exit:
stfs f1, 0xec(r29) #orig!
lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x80001990-0x80128254)-12*4+4



#fix offset for enemies!
i 801c0d1c:
b (0x802f6740-0x801c0d1c)

i 802f6740:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
lis r5, 0x802f
ori r5, r5, 0x6900
lwz r4, 0x0(r5)
cmpwi r4, 0x0
beq .exit

lis r5, 0x8042
ori r5, r5, 0xbb44
cmpwi r31, 0 #check for null pointer!
beq .exit
cmpwi r3, 0 #check for null pointer!
beq .exit

#check if r31 really is an addr
lis r4, 0x8200
cmpw r31, r4
bge .exit

lis r4, 0x8150	#all(?) actors reside in 0x815xxxxx
cmpw r31, r4
ble .exit


lbz r4, 0x9(r31) #read type of actor (if actor!)
cmpwi r4, 0x33	#goomba
beq .move_goomba
cmpwi r4, 0x85  #bobomb
beq .move_goomba
cmpwi r4, 0x86  #para bobomb
beq .move_goomba
cmpwi r4, 0x36	#koopa
beq .move_koopa

#otherwise, exit
b .exit

.move_koopa:
lfs f1, 0x70(r5) #6.0
fadds f2, f2, f1
fadds f2, f2, f1
#f2 = 12.0
b .exit

.move_goomba:
lfs f1, 0x70(r5) #6.0
fadds f2, f2, f1
lfs f1, 0x10(r5) #1.0
fsubs f2, f2, f1
#f2 = 5.0

.exit:
stfs f2, 0x1c(r3)
lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x802f6740-0x801c0d1c)-37*4+4





#handle y speed for actors, change
#gravity on them here! also flip them
i 8006cde0:
b (0x802f6908-0x8006cde0)


i 802f6908:
lfs f2, 0xec(r3)	#orig
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5

lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0(r5)
cmpwi r4, 0
beq .inactive

#active here, positive gravity to actor plix
lis r4, 0x4080
stw r4, 0xf8(r3)
#flip upside down
lis r4, 0x8000
stw r4, 0x104(r3)
b .exit

#fix offset!
lis r5, 0x8042
ori r5,r5,0xbb44
lfs f1, 0xb0(r3) #read y pos
lfs f0, 0x0(r5)
fadds f1, f1, f0
fadds f1, f1, f0
stfs f1, 0x98(r3)
b .exit

.inactive:
#store normal gravity to actor
lis r4, 0xC080
stw r4, 0xf8(r3)
#flip right way
lis r4, 0x0000
stw r4, 0x104(r3)

.exit:
lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x802f6908-0x8006cde0)-27*4+4



<memory offset="0x8004c5bc" value="482AA244" />

#fix jump?
i 8004c5bc:
b (0x802f6800-0x8004c5bc)


i 802f6800:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

#check gravity
lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0x0(r5)

cmpwi r4, 0
bne .active

#else, inactive
fcmpo cr0, f0, f1
ble- .jumpaway
b .exit

.active:
fneg f1,f1
fcmpo cr0, f0, f1
fneg f1,f1
bge- .jumpaway
b .exit

.jumpaway:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x802f6800-0x8004c5bc)-20*4+4*12


.exit:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f6800-0x8004c5bc)-25*4+4+4




#some kind of gravity fix
i 8005714c:
b (0x802f6d00-0x8005714c)


i 802f6d00:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

#check gravity
lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0x0(r5)

fabs f28, f0
fabs f31, f29

#cmpwi r4, 0
#bne .active

#.inactive:
#fcmpo cr0, f0, f29
#bge- .exit
#b .else

#.active:
fcmpo cr0, f28, f31
ble- .exit

.else:
stfs f29, 0xec(r30)

.exit:
lfs f31, 0x4(r5) #zero to f31
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f6d00-0x8005714c)-16*4+4+4



#is run when jumping:
i 8012771c:
b (0x802f6c00-0x8012771c)


i 802f6c00:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

#read status of gravity from 802f6900
lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0x0(r5)

cmpwi r4, 0
beq .exit

.active:
#set bbb8 to -2.0
lis r6, 0x8042
ori r6,r6,0xbbb8

lis r4, 0xc000
stw r4, 0x0(r6)

fneg f1, f1


#lfs f3, -0x74(r6) #4.0
#lfs f4, 0xb0(r31) #mario.y
#fsubs f4, f4, f3
#fsubs f4, f4, f3
#fsubs f4, f4, f3
#stfs f4, 0xb0(r31) #move!
##NO PLEASE DON'T
##also set 10d4 to 0!!
#lis r4, 0x0
#stw r4, 0x10d4(r31)

.exit:
#store speed to marios speed
stfs f1, 0xec(r31)
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f6c00-0x8012771c)-24*4+4



#hmmm? jump thing?
i 80057104:
b (0x802f6b00-0x80057104)

i 802f6b00:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

#read status from 802f6900
lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0x0(r5)

cmpwi r4, 0
beq .inactive

b .active

.inactive:
fadds f0, f1, f0
b .exit

.active:
fsubs f0, f1, f0

.exit:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f6b00-0x80057104)-18*4+4



#enable or disable event!
i 800e453c:
b (0x802f69a0-0x800e453c)


i 802f69a0:
addi r11, sp, 32	#orig!
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

lis r5, 0x802f
ori r5,r5,0x6900

#here, r0=0 if disable, else r0=0x10 to enable

.store:
stw r0, 0x0(r5)

cmpwi r0, 0x10
bne .exit

#else, flip gravity!
lis r6, 0x8042
ori r6,r6,0xbb44
lis r4, 0x4080
stw r4, 0x0(r6)



.exit:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f69a0-0x800e453c)-11*4+4



<memory offset="0x80070ef4" value="482883A8" />

#is run often???
#game loop kinda
i 80070ef4:
b (0x802f929c-0x80070ef4)


i 802f929c:
mflr r0			#orig
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6
stwu r7, -0x4(sp)	#spara r7

lis r5, 0x802f
ori r5,r5,0x6900

lis r6, 0x8042
ori r6, r6, 0xbb44

lwz r4, 0x0(r5)
cmpwi r4, 0
beq .normalgravity

#else, flip gravity!
lis r4, 0x4080
stw r4, 0(r6)
stw r4, 0xf8(r30)

#store 4 to super special value!!
lis r4, 0x4080	#4.0
stw r4, -0x5e40(r5)

#store pound gravity as well!
lis r4, 0x40C0 #6.0
stw r4, 0x70(r6)

#store 0 at bbb8!!!!!
lis r4, 0x0
stw r4, 0x74(r6)

#fix offset!
#lfs f1, 0xb0(r30) #read y pos
#lfs f0, 0x0(r6)
#fadds f1, f1, f0
#fadds f1, f1, f0
#stfs f1, 0x98(r30)


#flip model
lis r4, 0x8000
stw r4, 0x104(r30)

#check if mario/player/enemy is at top:
lbz r4, 0x274(r30)
cmpwi r4, 0x00
beq .exit

li r4, 0
stw r4, 0x274(r30)

.blrr:
#else, set speed to 0, gravity to 0! and blr
#also set 80054688 to 60000000
#also set 8042bbb8 (r6+0x74) to 40000000
#also set 8005714c to 41800008
lis r4, 0x0
stw r4, 0xec(r30)
#stw r4, 0x0(r6) #no gravity
li r4, 0x3099
stw r4, 0x10d4(r30)

#set bbb8 to 2.0
lis r4, 0x4000
stw r4, 0x74(r6)

lis r4, 0x6000
lis r7, 0x8005
ori r7, r7, 0x4688
stw r4, 0(r7)
lis r4, 0x4180
ori r4, r4, 0x0008
#stw r4, 0x2ac4(r7) #store 41800008 to 8005714c


lwzu r7, 0(sp)
lwzu r6, 4(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4
addi sp, sp, 32
blr

.normalgravity:
#store normal gravity
lis r4, 0xC080
stw r4, 0(r6)

#store 3 back to super special value!!
lis r4, 0x4040	#3.0
stw r4, -0x5e40(r5)

#store pound gravity as well!
lis r4, 0xC0C0 #6.0
stw r4, 0x70(r6)

stw r4, 0xf8(r30)

lis r4, 0xC000
stw r4, 0x74(r6)

#put mario model back the right way!
lis r4, 0x0000
stw r4, 0x104(r30)

.exit:
lwzu r7, 0(sp)
lwzu r6, 4(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f929c-0x80070ef4)-64*4+4


!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!



#hmmm...
<memory offset="0x802f929c" value
<memory offset="0x802f69a0" value="396100209481FFFC94A1FFFC94C1FFFC3CA0802F60A56900900500002C000010408200143CC0804260C6BB443C8040809086000084C1000084A1000484810004382100044BDEDB5C" />
<memory offset="0x802f6b00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C040000418200084800000CEC01002A48000008EC01002884C1000084A1000484810004382100044BD605C8" />
<memory offset="0x802f6c00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C040000418200183CC0804260C6BBB83C80C00090860000FC200850D03F00EC84C1000084A1000484810004382100044BE30AD8" />
<memory offset="0x802f6d00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C04000040820010FC00E840408000144800000CFC00E84040810008D3BE00EC84C1000084A1000484810004382100044BD6040C" />
<memory offset="0x802f6800" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C04000040820010FC0008404081001C4800002CFC200850FC000840FC200850408000084800001884C1000084A1000484810004382100044BD55D9C84C1000084A1000484810004382100044BD55D60" />
<memory offset="0x802f6908" value="C04300EC9481FFFC94A1FFFC3CA0802F60A56900808500002C040000418200383C804080908300F83C80800090830104480000343CA0804260A5BB44C02300B0C0050000EC21002AEC21002AD0230098480000143C80C080908300F83C8000009083010484A1000084810004382100044BD7646C" />
<memory offset="0x802f6740" value="9481FFFC94A1FFFC3CA0802F60A56900808500002C040000418200543CA0804260A5BB44889F00092C040033418200302C040085418200282C040086418200202C0400364182000848000024C0250070EC42082AEC42082A48000014C0250070EC42082AC0250010EC420828D043001C84A1000084810004382100044BECA564" />
<memory offset="0x80001800" value="C02300709481FFFC94A1FFFC3CA0802F60A56900808500002C04000041820010FC01004040810008FC20085084A100008481000438210004480AEFB8" />
<memory offset="0x80001990" value="9481FFFC94A1FFFC3CA0802F60A56900808500002C04000041820008FC200850D03D00EC84A10000848100043821000448126898" />
<memory offset="0x80001b20" value="9421FFF09481FFFC94A1FFFC388000003CA0802F60A569009085000084A10000848100043821000448924C2C" />
<memory offset="0x80070ef4" value="482883A8" />
<memory offset="0x800e453c" value="48212464" />
<memory offset="0x80057104" value="4829F9FC" />
<memory offset="0x8012771c" value="481CF4E4" />
<memory offset="0x8005714c" value="4829FBB4" />
<memory offset="0x8004c5bc" value="482AA244" />
<memory offset="0x8006cde0" value="48289B28" />
<memory offset="0x801c0d1c" value="48135A24" />
<memory offset="0x800b07ec" value="4BF51014" />
<memory offset="0x80128254" value="4BED973C" />
<memory offset="0x80926770" value="4B6DB3B0" />



#Working upside down with multiple switches!
<memory offset="0x802f929c" value
<memory offset="0x802f69a0" value="396100209481FFFC94A1FFFC94C1FFFC3CA0802F60A56900900500002C000010408200143CC0804260C6BB443C8040809086000084C1000084A1000484810004382100044BDEDB5C" />
<memory offset="0x802f6b00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C040000418200084800000CEC01002A48000008EC01002884C1000084A1000484810004382100044BD605C8" />
<memory offset="0x802f6c00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C040000418200183CC0804260C6BBB83C80C00090860000FC200850D03F00EC84C1000084A1000484810004382100044BE30AD8" />
<memory offset="0x802f6d00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C04000040820010FC00E840408000144800000CFC00E84040810008D3BE00EC84C1000084A1000484810004382100044BD6040C" />
<memory offset="0x802f6800" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C04000040820010FC0008404081001C4800002CFC200850FC000840FC200850408000084800001884C1000084A1000484810004382100044BD55D9C84C1000084A1000484810004382100044BD55D60" />
<memory offset="0x802f6908" value="C04300EC9481FFFC94A1FFFC3CA0802F60A56900808500002C040000418200383C804080908300F83C80800090830104480000343CA0804260A5BB44C02300B0C0050000EC21002AEC21002AD0230098480000143C80C080908300F83C8000009083010484A1000084810004382100044BD7646C" />
<memory offset="0x802f6740" value="9481FFFC94A1FFFC3CA0802F60A56900808500002C040000418200443CA0804260A5BB44889F00092C040033418200202C0400364182000848000024C0250070EC42082AEC42082A48000014C0250070EC42082AC0250010EC420828D043001C84A1000084810004382100044BECA574" />
<memory offset="0x80070ef4" value="482883A8" />
<memory offset="0x800e453c" value="48212464" />
<memory offset="0x80057104" value="4829F9FC" />
<memory offset="0x8012771c" value="481CF4E4" />
<memory offset="0x8005714c" value="4829FBB4" />
<memory offset="0x8004c5bc" value="482AA244" />
<memory offset="0x8006cde0" value="48289B28" />
<memory offset="0x801c0d1c" value="48135A24" />


OLD:
<memory offset="0x802f929c" value
<memory offset="0x802f69a0" value="9421FFF09481FFFC94A1FFFC94C1FFFCA08300082C04004A408200103CA0802F60A56900906500FC84C1000084A1000484810004382100044BD6D97C" />
<memory offset="0x802f6b00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500FC2C0400004182001C80C405582C0600004182000CEC01002A48000008EC01002884C1000084A1000484810004382100044BD605C0" />
<memory offset="0x802f6c00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500FC2C0400004182002880C405582C06000041820008480000183CC0804260C6BBB83C80C00090860000FC200850D03F00EC84C1000084A1000484810004382100044BE30AC8" />
<memory offset="0x802f6d00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500FC2C0400004182002880C405582C06000041820010FC00E840408000144800000CFC00E84040810008D3BE00EC84C1000084A1000484810004382100044BD60400" />
<memory offset="0x802f6800" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500FC2C0400004182004480C405582C06000041820010FC0008404081001C4800002CFC200850FC000840FC200850408000084800001884C1000084A1000484810004382100044BD55D9084C1000084A1000484810004382100044BD55D54" />
<memory offset="0x802f6908" value="C04300EC9481FFFC94A1FFFC3CA0802F60A56900808500002C040000408200343C804080908300F83C808000908301043CA0804260A5BB44C02300B0C0060000EC21002AEC21002AD0230098480000143C80C080908300F83C8000009083010484A1000084810004382100044BD76470" />
<memory offset="0x802f6740" value="9481FFFC94A1FFFC3CA0802F60A56900808500002C040000408200443CA0804260A5BB44889F00092C040033418200202C0400364182000848000024C0250070EC42082AEC42082A48000014C0250070EC42082AC0250010EC420828D043001C84A1000084810004382100044BECA574" />
<memory offset="0x802f67b4" value="9481FFFC94A1FFFC3CA0802F60A56900808500002C04000040820008FC200850D03D00EC84A1000084810004382100044BE31A74" />
<memory offset="0x8006cde0" value="48289B28" />
<memory offset="0x8004c5bc" value="482AA244" />
<memory offset="0x8005714c" value="4829FBB4" />
<memory offset="0x80064350" value="48292650" />
<memory offset="0x80070ef4" value="482883A8" />
<memory offset="0x80057104" value="4829F9FC" />
<memory offset="0x8012771c" value="481CF4E4" />
<memory offset="0x801c0d1c" value="48135A24" />
<memory offset="0x80128254" value="481CE560" />






80056e40	svinlång rutin, lägger till hastighet etcetc

80056f28	läser in acc i x-led..?

8005714c: ble-?
80057150: lagra max-värde i hastighet!

800570fc	läser in -0.34 och lägger till på hastigheten!




8005927c


8015ff60

8015fe10

80059190

802dceec

80128100

8015feb4

80054a3c


80376ca8	3.0, någon hastighet? max-hastighet i x?
läses vid 8012763c


prova att sätta hopphastigheten negativ:

80127710	40820008
80127718	fc200850



8006dcd8
8006db88

prova:
8007067c	90e300a0
80070678	90e300a4
80070680	60000000


801ca7c0	convertpathtoentrynum

8016bd90	
8016bd70

..taru.arc	barrel

801ca7d0