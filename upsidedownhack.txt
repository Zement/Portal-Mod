80070fb0

testa:
8006dcd8	38002000


Kan hoppa även om man är i luften! Dock ej någon collision detection alls..
80071210	4e800020

kan hoppa även om man är i luften! collision detection med!
80070ef0	4e800020

nograv:
8042bb44	00000000

korrekt (typ) modell upponer:
8154b8e0	bf800000
8154b8e4	bf800000



!!!!!!BÄTTRE MODELL UPPONER!!!!!!:
funkar bara bra när man är liten :(
8154b908	80000000



80128264?
80128100?

80129e70	körs när man böjer sig och hoppar!

80127350	hopp?

80128264	hopp???

8012771c	lägger till hastighet i y när man hoppat!


801272b0
800592ac

800592a8	60000000

8015fbe0

8015fb70!!!???

testa 8015fbb8	60000000





8042dc0c!!! 	sätt till plus!!
8042da58	sätt till minus!!
8042bbb8	-2! det som sätts 24/7!

801275b0	räkna ut alla arc-grejer i hopp?
		har kanske med sidohastighet i hopp att göra


801468b0	har nog mer med det att göra!


8004c5ec	detta är det ju som ändrar fallhastigheten!!
		...bara när man är högst upp typ...



8004c58c	läser in -.34 från 802f595c och sparar i b918

8004c5e0	läser in -0.06 och sparar i 8154b918 om man är på marken
		läser dock in -0.34 om man är där uppe!!!

8004c5ac	bestämmer nog vilket som ska läsas in.. hamnar i 
		801468b0

8004c5d4

80056bdc	läser från +0x1090


8154c6a8/c	viktig för arc, 01000000 om man håller in ettan!

8004c520	kör denna när upp och ner!

8004c5b0



8004c5c0	ble-, ändra till beq- när upp och ner!!!


8043fcb4	blir 2.0 ibland och läggs till i x-led, varför??


8006cd14	60000000, för att inte lägga till i x-led, testa!!
		springer bara på stället då...

800575f0	lägger till skit i förgasarn???
		testa 60000000 här istället!


när man hoppar på marken, b918 skrivs av (typ):
801468b0
8004c5fc
(8004c6e0)	OM MAN EJ HÅLLER INNE TVÅAN!


när man hoppar från taket, b918 skrivs av (typ):
801468b0
8004c5fc
(8004c6e0)	om man ej håller inne tvåan!




fixa hopp upponer:
80057104	ec010028	så att man faller uppåt!
måste dock fixa så att man hoppar neråt...


fixa hopp neråt:


BR på 800570f8!
BR på 80057150

800570e4

81548c04




8014369c	läser in 8042bb44 - gravity!


80071210:
~70: tar marios position och nästa position och gör något med


80127480: jump-funktion! körs när man trycker på hoppknappen

80057a68: jump?

8005e710: jump?

8005e3b0: juuuump??


800d9970	remove object?


8004e4d0



testa:
8006efa0	60000000
800706c8	60000000

8006dcdc	60000000
8006f0b0	60000000


80054688	60000000
80054698	60000000
80054898	60000000
80054888	60000000

80054920	60000000
80054950	60000000
8005497c	60000000
     98c
    4a10
    4a20


###DESSA!!!###
80070ef0	4e800020

80054688	60000000
#80054698	60000000
#80054898	60000000
#80054888	60000000

80054d64	60000000	lägger inte till 0400...?
#80054398	60000000

also:
#80057150	60000000
8042bb44	00000000
##############



48 - ?-knapp
49 - blå P
4A - utropstecken


8153da00:	?-knapp!
8153e2c0:	?-knapp
8153eb80:	!-knapp
8153f440:	P-knapp
8153fd00:	?-knapp

knapp + 0x558 = 0 när itryckt, 3f800000 annars


hastigheter i vanligt hopp:
3.868		.06
3.808		.34
3.468		.34
3.128		
2.788
...



8153fe60	koopa
81540888	goomba

80a73ee0	flyttar fiender (koopa iaf...), 
		kan använda denna för att ändra grav!
		och rotera dom etc!

80032170	flyttar goomba

80033180
8015fe80

8006cd90	handle x speed, bara koopa?
8006cde0	handle y speed, både koopa och goomba!!


konstig rörelse åt höger när bbb8 är 2.0:
802f6d00
80057600
8008c2c0	clear_activephysics

8006cd00	man kan ej röra sig om den avaktiveras..



### fixa offset ###
8016a2b0	DENNA fixar draw-matriser, this is it typ!!!


ändrar matrisen för koopa i y-led:
800384bc
80a73148



800d7110	avaktiveras denna så ritas mario ej!

800ca654	60000000 => ritas ej
800d3b8c	60000000 => inget
800d3b40	60000000 => bara huvudet ritas ut :D
800d3b50	60000000 => samma :O
800d3b6c	60000000 => bara kroppen ritas ut :)
800d3b80	60000000 => hänger sig

80164fac	60000000 => skärmen blir svart utom statusgrejer!


8154c660?

8154ced0, fortfarande en massa matriser??


80329ca0	står bland alla matriser..
80308d80	
80350d48

811ea984


8042e1c8
8042e1e4


8016a2b0	setDrawMatrix

80164d90	något med floating point händer här
802cd4e0	samma...
802c0e90	samma... händer direkt här
801c7130	samma



0x2c4		hela statusradsgrejen!
0x2c3		något annat?



804295f8	sätter storlek på bakgrund!

8087720c	60000000

815417d0







8154b9f0:

8030f6d0
8154b804
8154c8a8
8154c898
8154c8b8
b8b0
b8bc
b8ec
..
8154bae0
..
..
80319188
8154b9f0
..
8154e3ac
..
80308d80
..
816e7ae0
80350d48
80329ca0
80350d48



8154bb93
8154e3ac
816e7ae0
80350d48
80329ca0
80329ca0
804173d4
81769ca0
80350bd0



8154b8e8


### fixa hoppa sönder ###
80095a10	60000000, mario kan ej interagera
80095d30	preplayercollision
80095c20	playercollision, kan inte dö men kan döda när denna är inaktiv!


80031790	


800a0ea0	kill goomba när man hoppar! dock ej koopa..

800317f4	hoppar till 80031950, man kan hoppa på goombas utan att dom dör
		dock ej koopas

80095abc	körs när man springer på en goomba, ELLER en koopa
		800389e0 när koopa, 80031790 när goomba!!!

80038c30	kommer hit om man hoppar på koopa, ej annars!!
		baseras på r3 som läses in i 800964a0!!

800964fc	KOMMER BARA HIT OM MAN GÅR IN I NÅN!! :D
		baseras på r3 som läses in i 800a29c0!!!


800a2ae0	samma, baseras på r3 från 800a2870

800a2998	jämför hastigheten med något, THIS IS not... IT!!!
TESTA:
800a2998	ble- 0xc! GER att man dör om man hoppar på, men även
		om man hoppar på med upp-grav...


800a296c	kommer bara hit om man hoppar!
TESTA:
800a2968	blt 0x3c (4180003C) funkar att hoppa, men även att springa in i tyvärr!
		nop funkar att hoppa både uppe och nere samtidigt!


800b07b0	läser in FIENDENS _NÅGOT_ i f1!
8008cc2c	lagrar _NÅGOT_ i f1
8008cb64	samma, djupare



80128254	lagrar fnegad speed i marios! läser den från 8043fc64!
80146d14	lagrar hastigheten i 8043fc64!

80127344	lagrar adressen till fnegad speed?
		läses in från 8154b804+0x14a0 = 8154cca4!

8004740c
8004743c





!!!

800e453c	aktiverar event om r0 = 0x10,
		avaktiverar event om r0 = 0!!!!





!!!!!!HEELT NY!!!!!!
!!!!!!!!!!!!!!!!!!!!

#stores bounce speed to mario, fneg this if upside down!
i 80128254:
b (0x802f67b4-0x8128254)



i 802f67b4:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
lis r5, 0x802f
ori r5, r5, 0x6900
lwz r4, 0x0(r5)
cmpwi r4, 0x0
beq .exit

#here, upside down!
fneg f1, f1

.exit:
stfs f1, 0xec(r29) #orig!
lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x802f67b4-0x80128254)-12*4+4



#fix offset!
i 801c0d1c:
b (0x802f6740-0x801c0d1c)

i 802f6740:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
lis r5, 0x802f
ori r5, r5, 0x6900
lwz r4, 0x0(r5)
cmpwi r4, 0x0
beq .exit

lis r5, 0x8042
ori r5, r5, 0xbb44
lbz r4, 0x9(r31) #read type of actor (if actor!)
cmpwi r4, 0x33	#goomba
beq .move_goomba
cmpwi r4, 0x36	#koopa
beq .move_koopa

#otherwise, exit
b .exit

.move_koopa:
lfs f1, 0x70(r5) #6.0
fadds f2, f2, f1
fadds f2, f2, f1
#f2 = 12.0
b .exit

.move_goomba:
lfs f1, 0x70(r5) #6.0
fadds f2, f2, f1
lfs f1, 0x10(r5) #1.0
fsubs f2, f2, f1
#f2 = 5.0

.exit:
stfs f2, 0x1c(r3)
lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x802f6740-0x801c0d1c)-27*4+4





#handle y speed for actors, change
#gravity on them here! also flip them
i 8006cde0:
b (0x802f6908-0x8006cde0)


i 802f6908:
lfs f2, 0xec(r3)	#orig
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5

lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0(r5)
cmpwi r4, 0
beq .inactive

#active here, positive gravity to actor plix
lis r4, 0x4080
stw r4, 0xf8(r3)
#flip upside down
lis r4, 0x8000
stw r4, 0x104(r3)

#fix offset!
lis r5, 0x8042
ori r5,r5,0xbb44
lfs f1, 0xb0(r3) #read y pos
lfs f0, 0x0(r5)
fadds f1, f1, f0
fadds f1, f1, f0
stfs f1, 0x98(r3)
b .exit

.inactive:
#store normal gravity to actor
lis r4, 0xC080
stw r4, 0xf8(r3)
#flip right way
lis r4, 0x0000
stw r4, 0x104(r3)

.exit:
lwzu r5, 0(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x802f6908-0x8006cde0)-27*4+4



<memory offset="0x8004c5bc" value="482AA244" />

#fix jump?
i 8004c5bc:
b (0x802f6800-0x8004c5bc)


i 802f6800:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

#check gravity
lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0x0(r5)

cmpwi r4, 0
bne .active

#else, inactive
fcmpo cr0, f0, f1
ble- .jumpaway
b .exit

.active:
fneg f1,f1
fcmpo cr0, f0, f1
fneg f1,f1
bge- .jumpaway
b .exit

.jumpaway:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4
b -(0x802f6800-0x8004c5bc)-20*4+4*12


.exit:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f6800-0x8004c5bc)-25*4+4+4



i 8005714c:
b (0x802f6d00-0x8005714c)


i 802f6d00:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

#check gravity
lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0x0(r5)

cmpwi r4, 0
bne .active

.inactive:
fcmpo cr0, f0, f29
bge- .exit
b .else

.active:
fcmpo cr0, f0, f29
ble- .exit

.else:
stfs f29, 0xec(r30)

.exit:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f6d00-0x8005714c)-18*4+4+4



#is run when jumping:
i 8012771c:
b (0x802f6c00-0x8012771c)


i 802f6c00:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

#read status of gravity from 802f6900
lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0x0(r5)

cmpwi r4, 0
beq .exit

.active:
#set bbb8 to -2.0
lis r6, 0x8042
ori r6,r6,0xbbb8

lis r4, 0xc000
stw r4, 0x0(r6)

fneg f1, f1

.exit:
#store speed to marios speed
stfs f1, 0xec(r31)
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f6c00-0x8012771c)-18*4+4



#hmmm? jump thing?
i 80057104:
b (0x802f6b00-0x80057104)


i 802f6b00:
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

#read status from 802f6900
lis r5, 0x802f
ori r5,r5,0x6900
lwz r4, 0x0(r5)

cmpwi r4, 0
beq .inactive

b .active

.inactive:
fadds f0, f1, f0
b .exit

.active:
fsubs f0, f1, f0

.exit:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f6b00-0x80057104)-18*4+4



#enable or disable event!
i 800e453c:
b (0x802f69a0-0x800e453c)


i 802f69a0:
addi r11, sp, 32	#orig!
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6

lis r5, 0x802f
ori r5,r5,0x6900

#here, r0=0 if disable, else r0=0x10 to enable

.store:
stw r0, 0x0(r5)

cmpwi r0, 0x10
bne .exit

#else, flip gravity!
lis r6, 0x8042
ori r6,r6,0xbb44
lis r4, 0x4080
stw r4, 0x0(r6)




.exit:
lwzu r6, 0(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f69a0-0x800e453c)-11*4+4



<memory offset="0x80070ef4" value="482883A8" />

#is run often???
#game loop kinda
i 80070ef4:
b (0x802f929c-0x80070ef4)


i 802f929c:
mflr r0			#orig
stwu r4, -0x4(sp)	#spara r4
stwu r5, -0x4(sp)	#spara r5
stwu r6, -0x4(sp)	#spara r6
stwu r7, -0x4(sp)	#spara r7

lis r5, 0x802f
ori r5,r5,0x6900

lis r6, 0x8042
ori r6, r6, 0xbb44

lwz r4, 0x0(r5)
cmpwi r4, 0
beq .normalgravity

#else, flip gravity!
lis r4, 0x4080
stw r4, 0(r6)
stw r4, 0xf8(r30)

#store pound gravity as well!
lis r4, 0x40C0 #6.0
stw r4, 0x70(r6)

#store 0 at bbb8!!!!!
lis r4, 0x0
stw r4, 0x74(r6)
#fix offset!
lfs f1, 0xb0(r30) #read y pos
lfs f0, 0x0(r6)
fadds f1, f1, f0
fadds f1, f1, f0
stfs f1, 0x98(r30)


#flip model
lis r4, 0x8000
stw r4, 0x104(r30)

#check if mario/player/enemy is at top:
lbz r4, 0x274(r30)
cmpwi r4, 0x00
beq .exit

li r4, 0
stw r4, 0x274(r30)

.blrr:
#else, set speed to 0, gravity to 0! and blr
#also set 80054688 to 60000000
#also set 8042bbb8 (r6+0x74) to 40000000
#also set 8005714c to 41800008
lis r4, 0x0
stw r4, 0xec(r30)
#stw r4, 0x0(r6) #no gravity
li r4, 0x3099
stw r4, 0x10d4(r30)

#set bbb8 to 2.0
lis r4, 0x4000
stw r4, 0x74(r6)

lis r4, 0x6000
lis r7, 0x8005
ori r7, r7, 0x4688
stw r4, 0(r7)
lis r4, 0x4180
ori r4, r4, 0x0008
#stw r4, 0x2ac4(r7) #store 41800008 to 8005714c


lwzu r7, 0(sp)
lwzu r6, 4(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4
addi sp, sp, 32
blr

.normalgravity:
#store normal gravity
lis r4, 0xC080
stw r4, 0(r6)

#store pound gravity as well!
lis r4, 0xC0C0 #6.0
stw r4, 0x70(r6)

stw r4, 0xf8(r30)

lis r4, 0xC000
stw r4, 0x74(r6)

#put mario model back the right way!
lis r4, 0x0000
stw r4, 0x104(r30)

.exit:
lwzu r7, 0(sp)
lwzu r6, 4(sp)
lwzu r5, 4(sp)
lwzu r4, 4(sp)
addi sp,sp,4

b -(0x802f929c-0x80070ef4)-64*4+4


!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!



#Working high jump upside down with multiple switches!
#Have not fixed other actors yet though
<memory offset="0x802f929c" value
<memory offset="0x802f69a0" value="396100209481FFFC94A1FFFC94C1FFFC3CA0802F60A56900900500002C000010408200143CC0804260C6BB443C8040809086000084C1000084A1000484810004382100044BDEDB5C" />
<memory offset="0x802f6b00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C040000418200084800000CEC01002A48000008EC01002884C1000084A1000484810004382100044BD605C8" />
<memory offset="0x802f6c00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C040000418200183CC0804260C6BBB83C80C00090860000FC200850D03F00EC84C1000084A1000484810004382100044BE30AD8" />
<memory offset="0x802f6d00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C04000040820010FC00E840408000144800000CFC00E84040810008D3BE00EC84C1000084A1000484810004382100044BD6040C" />
<memory offset="0x802f6800" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500002C04000040820010FC0008404081001C4800002CFC200850FC000840FC200850408000084800001884C1000084A1000484810004382100044BD55D9C84C1000084A1000484810004382100044BD55D60" />
<memory offset="0x80070ef4" value="482883A8" />
<memory offset="0x800e453c" value="48212464" />
<memory offset="0x80057104" value="4829F9FC" />
<memory offset="0x8012771c" value="481CF4E4" />
<memory offset="0x8005714c" value="4829FBB4" />
<memory offset="0x8004c5bc" value="482AA244" />


OLD:
<memory offset="0x802f929c" value
<memory offset="0x802f69a0" value="9421FFF09481FFFC94A1FFFC94C1FFFCA08300082C04004A408200103CA0802F60A56900906500FC84C1000084A1000484810004382100044BD6D97C" />
<memory offset="0x802f6b00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500FC2C0400004182001C80C405582C0600004182000CEC01002A48000008EC01002884C1000084A1000484810004382100044BD605C0" />
<memory offset="0x802f6c00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500FC2C0400004182002880C405582C06000041820008480000183CC0804260C6BBB83C80C00090860000FC200850D03F00EC84C1000084A1000484810004382100044BE30AC8" />
<memory offset="0x802f6d00" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500FC2C0400004182002880C405582C06000041820010FC00E840408000144800000CFC00E84040810008D3BE00EC84C1000084A1000484810004382100044BD60400" />
<memory offset="0x802f6800" value="9481FFFC94A1FFFC94C1FFFC3CA0802F60A56900808500FC2C0400004182004480C405582C06000041820010FC0008404081001C4800002CFC200850FC000840FC200850408000084800001884C1000084A1000484810004382100044BD55D9084C1000084A1000484810004382100044BD55D54" />
<memory offset="0x802f6908" value="C04300EC9481FFFC94A1FFFC3CA0802F60A56900808500002C040000408200343C804080908300F83C808000908301043CA0804260A5BB44C02300B0C0060000EC21002AEC21002AD0230098480000143C80C080908300F83C8000009083010484A1000084810004382100044BD76470" />
<memory offset="0x802f6740" value="9481FFFC94A1FFFC3CA0802F60A56900808500002C040000408200443CA0804260A5BB44889F00092C040033418200202C0400364182000848000024C0250070EC42082AEC42082A48000014C0250070EC42082AC0250010EC420828D043001C84A1000084810004382100044BECA574" />
<memory offset="0x802f67b4" value="9481FFFC94A1FFFC3CA0802F60A56900808500002C04000040820008FC200850D03D00EC84A1000084810004382100044BE31A74" />
<memory offset="0x8006cde0" value="48289B28" />
<memory offset="0x8004c5bc" value="482AA244" />
<memory offset="0x8005714c" value="4829FBB4" />
<memory offset="0x80064350" value="48292650" />
<memory offset="0x80070ef4" value="482883A8" />
<memory offset="0x80057104" value="4829F9FC" />
<memory offset="0x8012771c" value="481CF4E4" />
<memory offset="0x801c0d1c" value="48135A24" />
<memory offset="0x80128254" value="481CE560" />






80056e40	svinlång rutin, lägger till hastighet etcetc

80056f28	läser in acc i x-led..?

8005714c: ble-?
80057150: lagra max-värde i hastighet!

800570fc	läser in -0.34 och lägger till på hastigheten!




8005927c


8015ff60

8015fe10

80059190

802dceec

80128100

8015feb4

80054a3c


80376ca8	3.0, någon hastighet? max-hastighet i x?
läses vid 8012763c


prova att sätta hopphastigheten negativ:

80127710	40820008
80127718	fc200850



8006dcd8
8006db88

prova:
8007067c	90e300a0
80070678	90e300a4
80070680	60000000


801ca7c0	convertpathtoentrynum

8016bd90	
8016bd70

..taru.arc	barrel

801ca7d0